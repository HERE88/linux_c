【总结：】
1、printf会让出时间片。
     例如两个SCHED_FIFO同优先级（=50），其中a：while(1) printf(""); c：while(1); 那么a先运行的情况下，c可以运行起来，且c一旦运行，a不再能够得到调度。c退出后a才能继续运行。

2、SCHED_FIFO与SCHED_RR同优先级。
     例如a和b分别为SCHED_FIFO与SCHED_RR，同优先级（=50），均为while(1); 那么a先运行的情况下，b得不到调度。a退出后b才能运行。若a再次运行，则b一旦被调度走，就不会再运行。

3、两个SCHED_RR同优先级。
     例如a和b均为SCHED_RR，同优先级（=50），均为while(1); 那么a先运行的情况下，b也可以得到运行。反之亦然。且各占CPU为50%。

4、两个SCHED_RR不同优先级。
    例如a和b均为SCHED_RR，a优先级40，b优先级60，均为while(1); 那么a先运行的情况下，b可以运行起来，且b一旦运行，a不再能够得到调度。b退出后a才能继续运行。

5、SCHED_FIFO与SCHED_RR不同优先级。
     例如a和b分别为SCHED_FIFO与SCHED_RR，a优先级40，b优先级60，均为while(1); 那么a先运行的情况下，b可以运行起来，且b一旦运行，a不再能够得到调度。b退出后a才能继续运行。

【注意：】
1、测试时最好不要使用printf，而要通过top命令来观察。原因基于上面实测第1条，printf是会让出时间片的。
     